<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2021-11-22T08:20:06+07:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">akhmal22’s blog</title><subtitle>All about CompSci Stuff</subtitle><entry><title type="html">JOIN DOCUMENT</title><link href="http://0.0.0.0:4000/english/documentation/2021/10/10/join-document.html" rel="alternate" type="text/html" title="JOIN DOCUMENT" /><published>2021-10-10T11:12:59+07:00</published><updated>2021-10-10T11:12:59+07:00</updated><id>http://0.0.0.0:4000/english/documentation/2021/10/10/join-document</id><content type="html" xml:base="http://0.0.0.0:4000/english/documentation/2021/10/10/join-document.html">&lt;h1 id=&quot;documentation-of-join&quot;&gt;Documentation of JOIN&lt;/h1&gt;

&lt;h2 id=&quot;foreword&quot;&gt;Foreword&lt;/h2&gt;

&lt;p&gt;This document made to fulfill information providing act for the platform itself (JOIN) as a general topic or for its developer, to be exact, the objectives of this document are.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Place to log everything up about platform’s development, in order to track every changes made.&lt;/li&gt;
  &lt;li&gt;Implementing good (hopefully) software quality assurance.&lt;/li&gt;
  &lt;li&gt;Information source for the developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before aligning to the document, JOIN is platform designed as communication infrastructure for those who had a project whom needs worker or workers who need project to work. Supposedly with JOIN, project owner can get desired project worker also the workers can get desired project to work on.&lt;/p&gt;

&lt;h2 id=&quot;update-from-restructured&quot;&gt;Update from Restructured&lt;/h2&gt;

&lt;p&gt;Below content is not an original JOIN development notes anymore, Restructured version will take over the page so it would be Restructured’s development notes.&lt;/p&gt;

&lt;p&gt;I make the demo page to it, it is in &lt;a href=&quot;https://joinwebfr.herokuapp.com/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;documentation-table-of-contents&quot;&gt;Documentation Table of Contents&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Development Flow&lt;/li&gt;
  &lt;li&gt;Overall description&lt;/li&gt;
  &lt;li&gt;Implementation&lt;/li&gt;
  &lt;li&gt;Testing&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;development-flow&quot;&gt;Development Flow&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/DiagramAlirTABlack.png&quot; alt=&quot;directory&quot; /&gt;&lt;br /&gt;
&lt;sub&gt;Figure 1: Development flow of JOIN&lt;/sub&gt;&lt;/p&gt;

&lt;h3 id=&quot;system-designing-and-defining&quot;&gt;System designing and defining&lt;/h3&gt;

&lt;p&gt;In this step of development, system defined and designed from nothing to conceptual thing. Analytical study conducted based on the objective of the system given us use case of the system then use case can be broken down to more specific concept. all conceptual matter of the system depicted as UML diagram.&lt;/p&gt;

&lt;h3 id=&quot;implementation-preparation&quot;&gt;Implementation preparation&lt;/h3&gt;

&lt;p&gt;After conceptual of the system depicted, we can go to figuring out the prototype of the system. Before going to implement the system, prototyping is required in search of implementation guideline for the real system buildup.&lt;/p&gt;

&lt;h3 id=&quot;system-implementation&quot;&gt;System implementation&lt;/h3&gt;

&lt;p&gt;We had our prototype here, so we can start to build actual system, front-end, back-end, everything. Front-end development had user interface prototype as a guideline, back-end used data requirement and data schema as a guideline, then two of it integrated.&lt;/p&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;

&lt;p&gt;Documentation is all about taking records out of the whole process of development, in order to provide information to fellow developer or system actual user. Documentation can be commited anytime in the process below as long as it can provide important information to other.&lt;/p&gt;

&lt;h2 id=&quot;overall-description&quot;&gt;Overall description&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/JOIN_UseCase.png&quot; alt=&quot;directory&quot; /&gt;&lt;br /&gt;
&lt;sub&gt;Figure 2: Use Case of JOIN&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;System can provide 4 uses for one actor, each uses can be broken down into parts but first let us show you the description.&lt;/p&gt;

&lt;h3 id=&quot;manage-projects&quot;&gt;Manage Projects&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Name: Manage Projects&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Primary Actor: User&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Interest: Project owner managing owned project&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Short description: Add new project, edit project detail, delete or read existing projects.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Relationships: Association&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Normal Flow of Event:&lt;br /&gt;1. See existing projects&lt;br /&gt;2. Managing existing projects with delete and update operations.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Subflow:&lt;br /&gt;If no project owned:&lt;br /&gt;1. Add new project&lt;br /&gt;2. Fill in data for project addition&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Alternate/Exceptional Flow&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;search-for-projects&quot;&gt;Search for Projects&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Name: Search for Projects&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Primary Actor: User&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Interest: Searching for desired projects to join&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Short description: Inputting keyword for desired projects, set up search filter, send join requests.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Relationships: Association&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Normal Flow of Event:&lt;br /&gt;1. Search with keyword&lt;br /&gt;If worked, to the next step&lt;br /&gt;If not, to  subflow 1&lt;br /&gt;2. See project detail&lt;br /&gt;3. Communicate to project owner&lt;br /&gt;4. Send join request&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Subflow:&lt;br /&gt;If search with keyword not worked:&lt;br /&gt;1. Search with search filter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Alternate/Exceptional Flow&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;manage-profile&quot;&gt;Manage Profile&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Name: Manage Profile&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Primary Actor: User&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Interest: Managing own profile&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Short description: Add profile detail, edit or delete profile detail.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Relationships: Association&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Normal Flow of Event:&lt;br /&gt;1. See profile&lt;br /&gt;2. Managing profile with delete and edit operation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Subflow:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Alternate/Exceptional Flow&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;report-abusive&quot;&gt;Report Abusive&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Name: Join to Project&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Primary Actor: User&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Interest: Joining project that selected before&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Short description: Send a request to join selected project to project owner&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Relationships: Association&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Normal Flow of Event:&lt;br /&gt;1. See project detail&lt;br /&gt;2. Request to Join&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Subflow:&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Alternate/Exceptional Flow&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;closure&quot;&gt;Closure&lt;/h2&gt;

&lt;p&gt;It needs time to rebuild the old project, restructured version of JOIN are being buttoned so maybe this page can be updated overtime.&lt;/p&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="documentation" /><summary type="html">Documentation of JOIN</summary></entry><entry><title type="html">SUPER RESOLUTION</title><link href="http://0.0.0.0:4000/english/article/2021/08/23/super-resolution-what-why-how.html" rel="alternate" type="text/html" title="SUPER RESOLUTION" /><published>2021-08-23T11:12:59+07:00</published><updated>2021-08-23T11:12:59+07:00</updated><id>http://0.0.0.0:4000/english/article/2021/08/23/super-resolution-what-why-how</id><content type="html" xml:base="http://0.0.0.0:4000/english/article/2021/08/23/super-resolution-what-why-how.html">&lt;h1 id=&quot;super-resolution&quot;&gt;Super Resolution&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;

&lt;p&gt;Took a break from programming matters awhile, new topic we got is Super Resolution. Classical concern from Computer Vision drew my attention lately since me too learned it in college so I can be a capable one to explain it.&lt;/p&gt;

&lt;p&gt;In this article we presented Super Resolution as implementation of Computer Vision, I tried not too theoretical in presenting it so there’s not much things about model building in this article but just showcasing the interest of SR. This article explaining the Super Resolution as a matter, motivation to learn and the example.&lt;/p&gt;

&lt;h2 id=&quot;what-is-super-resolution&quot;&gt;What is Super Resolution?&lt;/h2&gt;

&lt;p&gt;Super Resolution (SR) in simple term is prediction of images for larger resolution of images predicted. In Computer Vision (CV) theory, SR addressed as techniques done to construct higher resolution images from current images by adding some missing features in target images by predicting it, the prediction made based on non-redundant features collected from same images resembled the size of target image or lower size than target. Features added including edges, color and any other complementary features.&lt;/p&gt;

&lt;h2 id=&quot;why-you-must-learn-this&quot;&gt;Why you must learn this?&lt;/h2&gt;

&lt;p&gt;SR answered people’s demand of better imaging quality through times, like always wanted sort of a good quality photo even from the past, like we know past’s isn’t as good as nowaday’s imaging technologies thus worse photos than now. Also SR can overcome usage of such bad graphic tools like web camera or handheld camera to get next level results.&lt;/p&gt;

&lt;h2 id=&quot;is-it-really-works&quot;&gt;Is it really works?&lt;/h2&gt;

&lt;p&gt;Yes it is, with SR job on your picture you can tell the difference pre and post job. Depends on the technique adopted, SR added more features to your picture so it is become different from original picture. I might show you one picture predicted to SR version to you so you can actually tell the difference between two, the technique used in this article is example-based SR.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/comp.jpg&quot; alt=&quot;directory&quot; /&gt;
&lt;br /&gt;&lt;sub&gt;Figure 1: SR and original picture comparison&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;As depicted above, SR version picture appeared more sharp than initial picture hence the feature addition in the prediction.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;SR are by-far serious topic to explore, since this article lacks the theoretic explanations, in the next occasion I will try to explain it in more detail fashion after decipher it to my brain.&lt;/p&gt;

&lt;h2 id=&quot;article-source&quot;&gt;Article Source&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.datadriveninvestor.com/using-the-super-resolution-convolutional-neural-network-for-image-restoration-ff1e8420d846&quot;&gt;https://medium.datadriveninvestor.com/using-the-super-resolution-convolutional-neural-network-for-image-restoration-ff1e8420d846&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ieeexplore.ieee.org/abstract/document/1203207&quot;&gt;https://ieeexplore.ieee.org/abstract/document/1203207&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;P. Milanfar, “Super-resolution Imaging” 2011&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="article" /><summary type="html">Super Resolution</summary></entry><entry><title type="html">COMPARING C AND GO: TREE SORT</title><link href="http://0.0.0.0:4000/english/article/2021/08/11/comparing-c-and-go-sorting-tree.html" rel="alternate" type="text/html" title="COMPARING C AND GO: TREE SORT" /><published>2021-08-11T11:12:59+07:00</published><updated>2021-08-11T11:12:59+07:00</updated><id>http://0.0.0.0:4000/english/article/2021/08/11/comparing-c-and-go-sorting-tree</id><content type="html" xml:base="http://0.0.0.0:4000/english/article/2021/08/11/comparing-c-and-go-sorting-tree.html">&lt;h1 id=&quot;comparing-c-and-go-solutions-of-tree-sorting&quot;&gt;Comparing C and Go Solutions of Tree Sorting&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;

&lt;p&gt;In a previous words, I sent the comparison of programming languages C and Go, I compared the times both take to execution and compilation. This specific article is about to do the same thing as previous did. Difference is the programs used in comparison is Tree Sort. With the exact same approach as before, I hope it can extract more data to the comparison than before.&lt;/p&gt;

&lt;p&gt;Tree Sort, compared to previous problem Tower of Hanoi, aside of they had different objectives, the complexities are too different to each other. time complexity for Tower of Hanoi is O(2&lt;sup&gt;n&lt;/sup&gt; - 1) meanwhile this article’s problem’s is O(n&lt;sup&gt;2&lt;/sup&gt;) that indicates us two differentiated comparison problem.&lt;/p&gt;

&lt;h2 id=&quot;what-is-tree-sort&quot;&gt;What is Tree Sort?&lt;/h2&gt;

&lt;p&gt;For the fast note, it is sorting machine made from binary tree data structure (binary by-design, difficulty reason). For longer explanation, said tree can put the collection of values sorted by inserting each values on collection to the tree and change its sequence mark based on the tree’s nature and sorting problem solving. As the problem already a well-known, we can focus on having the solution ready, interpret it and compare both interpreted solution.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/binary-tree-to-DLL.png&quot; alt=&quot;directory&quot; /&gt;
&lt;br /&gt;&lt;sub&gt;Figure 1: Binary Tree illustration&lt;/sub&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-the-algorithm-going&quot;&gt;How the algorithm going?&lt;/h2&gt;

&lt;p&gt;The problem is pretty obvious so is the solution, basically comparing each element from the list to determine the sequence. Same as previous solution, this particular solution can make use of recursive approach and non-recursive approach and I will use recursive approach for the algorithm. All we should do in algorithm written in pseudocode below. Given the array of element and empty tree represented as nodes each sequentially defined as ‘a’ and ‘t’, ‘a’ will start from 1 and the element position in array (index) will be enclosed by ‘[]’, predefined function ‘insert()’ used to inserting array elements to the tree, data required for ‘insert()’ are array element and tree node.&lt;/p&gt;

&lt;h2 id=&quot;set-the-structure-crystal-clear-before-gone-further&quot;&gt;Set the structure crystal clear before gone further&lt;/h2&gt;

&lt;p&gt;Explaining tree as a data structure with a single figure but firstly I will show your terms used in this data structure in a table&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Term&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Definition&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Root&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Top-most node of the tree&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;An element in the tree&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Leaf&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bottom-most of the tree&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Parent&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node that has node/nodes below it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Child&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node that has node/nodes above it&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Key&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Data stored by node&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;So the tree is consisted of several nodes, node of the tree had its own structure to store and represent the data, model below once again represent the tree if printed graphically.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.tutorialspoint.com/data_structures_algorithms/images/binary_tree.jpg&quot; alt=&quot;directory&quot; /&gt;
&lt;br /&gt;&lt;sub&gt;Figure 2: Tree illustration&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Nodes in binary tree must be at least contain 3 attributes for the tree worked as structured data representation.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Key: Literal representation of the data on the nodes.&lt;/li&gt;
  &lt;li&gt;Left Child: Finger that points to another node, child node assumed position is in the left.&lt;/li&gt;
  &lt;li&gt;Right Child: Finger that points to another node, child node assumed position is in the right.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus the structure explained above, we can move forward.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- functions ---
insert(element, tree):
  if tree is empty then:
    add the element to tree

  if given element lower than given tree node's value then:
    add element to the left of given tree node
  if given element greater than given tree node's value then:
    add element to the right of given tree node

inorderTraverse(tree, element):
  call self for left leaf
  traverse
  call self for right leaf

--- main ---
insert(a[1], t)

run iteratively until 10 steps done:
  insert(a[steps], t)
  increment steps

inorderTraverse(t, a)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-can-we-interpret&quot;&gt;How can we interpret?&lt;/h2&gt;

&lt;p&gt;Follow the algorithm above in order to sorting data using tree data structure. For the programs built, we need to fulfill the function and procedure required based on algorithm. Method name are listed below&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Usage&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;createNode&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Allocate one node for the tree&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;storeSorted&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Traverse tree in inorder fashion to rearrange the data sequence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;insert&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Insert node to the tree as a child of pre-allocated node&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 1: Methods of tree sort&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;For the problem solving lines, we can allocate array consists of several elements and for this interpretation, elements are positive integer. With the specification and explanation above, implementations of the solution are listed in bonus section.&lt;/p&gt;

&lt;h2 id=&quot;how-the-comparison-going&quot;&gt;How the comparison going?&lt;/h2&gt;

&lt;p&gt;Comparison specification mentioned in previous article is the same for this article, same device, same algorithm and same number of elements for both programs. Screen capture below intended to give more evidence than the previous.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/compiletree.png&quot; alt=&quot;directory&quot; /&gt;
&lt;br /&gt;&lt;sub&gt;Figure 3: Compilation time&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/executetree.png&quot; alt=&quot;directory&quot; /&gt;
&lt;br /&gt;&lt;sub&gt;Figure 4: Execution time&lt;/sub&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Metrices&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;C&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Go&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Compilation time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.270s&lt;br /&gt; user 0m0.094s&lt;br /&gt; sys 0m0.028s&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.308s&lt;br /&gt; user 0m0.313s&lt;br /&gt; sys 0m0.086s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Execution time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.003s&lt;br /&gt; user 0m0.002s&lt;br /&gt; sys 0m0.001s&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.003s&lt;br /&gt; user 0m0.000s&lt;br /&gt; sys 0m0.003s&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 2: Measurement results&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Times showed on the table 2 consist 3 kind of time, ‘real’, ‘user’ and ‘sys’. ‘Real’ indicates whole time taken on the processes running session, ‘user’ indicates time spent by CPU in computation process of the executable, ‘sys’ indicates time spent by CPU in system tasks in order to bring the executable a run.&lt;/p&gt;

&lt;p&gt;In compilation time, C beats Go in every aspects of time, but in the execution time, Go beats C in ‘user’ time, Go and C are equal in ‘real’ and ‘sys’ time.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The measurement resulted that code in C was faster in terms of compilation time than code in Go, contrary to previous article, Go and C have equal value in execution time.&lt;/p&gt;

&lt;h2 id=&quot;bonus&quot;&gt;Bonus&lt;/h2&gt;

&lt;p&gt;The implementations are below.&lt;/p&gt;

&lt;p&gt;C: &lt;a href=&quot;https://git.io/JRPCA&quot;&gt;https://git.io/JRPCA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go: &lt;a href=&quot;https://git.io/JRPWs&quot;&gt;https://git.io/JRPWs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;article-source&quot;&gt;Article Source&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/iterative-tower-of-hanoi/&quot;&gt;https://www.geeksforgeeks.org/iterative-tower-of-hanoi/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/time-complexity-analysis-tower-hanoi-recursion/&quot;&gt;https://www.geeksforgeeks.org/time-complexity-analysis-tower-hanoi-recursion/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_sort&quot;&gt;https://en.wikipedia.org/wiki/Tree_sort&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/tree-sort/&quot;&gt;https://www.geeksforgeeks.org/tree-sort/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/binary-tree-data-structure/&quot;&gt;https://www.geeksforgeeks.org/binary-tree-data-structure/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="article" /><summary type="html">Comparing C and Go Solutions of Tree Sorting</summary></entry><entry><title type="html">COMPARING C AND GO: TOWER OF HANOI PROBLEM</title><link href="http://0.0.0.0:4000/english/article/2021/07/22/comparing-c-and-go-tower-of-hanoi-problem.html" rel="alternate" type="text/html" title="COMPARING C AND GO: TOWER OF HANOI PROBLEM" /><published>2021-07-22T21:12:59+07:00</published><updated>2021-07-22T21:12:59+07:00</updated><id>http://0.0.0.0:4000/english/article/2021/07/22/comparing-c-and-go-tower-of-hanoi-problem</id><content type="html" xml:base="http://0.0.0.0:4000/english/article/2021/07/22/comparing-c-and-go-tower-of-hanoi-problem.html">&lt;h1 id=&quot;comparing-c-and-go-solutions-of-tower-of-hanoi-problem&quot;&gt;Comparing C and Go Solutions of Tower of Hanoi Problem&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;

&lt;p&gt;I am going to write an article in comparison area, maybe I will write off few articles like this in near future but comes with different algorithms, in near past you can find the comparison article between paradigms that you can find it yourself on ‘post’ section, now I will commit the comparison between languages said the one to be the substitution of another, C and Go. C can be pronounced as Programming Languages’ father ‘cause so many programming language developed based on C or interpreted by C. Go on the other hand was relatively new compared to C, on the time before, Go claimed to be ‘modern C’ ‘cause of features it bore fulfils ‘modern language’ set but the speed was faster than most of said ‘modern language’ and also its compiled just like C.&lt;/p&gt;

&lt;p&gt;Comparison commited using two programs written in C and Go that solved old classic problem of Tower of Hanoi, using same environment of hardware and software, and time of processes are parameters to be compared in order to have the comparison result. The comparison will comparing time of compilation and execution of both program. Using same algorithm and paradigm, I hope this comparison can be on-par in terms of two programming language performance comparison.&lt;/p&gt;

&lt;h2 id=&quot;what-is-tower-of-hanoi&quot;&gt;What is Tower of Hanoi?&lt;/h2&gt;

&lt;p&gt;Tower of Hanoi is mathematical problem invented by E. Lucas in 1883. The problem given us stack of disks stacked over the pole and another two empty poles, the disks stacked are differ in term of size, top-most disk is the smallest and bottom-most disk is the largest. In order to solve the problem, solver has to place whole stack of disks to one of two empty poles named ‘target’ pole and ensure the placement steps are the same number to optimal solution according to disk number. Steps commited must be disk-size-concerned, that smaller disks must be placed above larger disks, otherwise, the step is illegal and not counted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/Tower-of-Hanoi-Tower-of-Brahma-or-Lucas-Tower.jpg&quot; alt=&quot;directory&quot; /&gt;
&lt;sub&gt;Figure 1: Tower of Hanoi illustration&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;For the Tower of Hanoi problem, given the optimal amount of solution steps are based on pattern (2^n)-1 which ‘n’ is represent the stack thickness. The question is, how the algorithm going to find the optimal solution? How can we interpret it to the code? and How the comparison going between C and Go code of Tower of Hanoi interpretation?&lt;/p&gt;

&lt;h2 id=&quot;how-the-algorithm-going&quot;&gt;How the algorithm going?&lt;/h2&gt;

&lt;p&gt;Actually for solving Tower of Hanoi problem, there are two basic of approaches you can follow, iterative approach or recursive approach in order to interpret the solution but in this occasion, I will use iterative approach algorithm to interpret the solution to the code. Steps in iterative approach we must follow is written as pseudocode below. In pseudocode below, number of disks represented by ‘n’, initial pole (disks first stacked there) represented by ‘i’, mid pole (one of two empty poles) represented by ‘m’ and final pole (disks final place) represented by ‘f’.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if n is divisible by 2 then:
 makes legal move from i to m or vice versa
 makes legal move from i to f or vice versa
 makes legal move from m to f or vice versa
if n is not divisible by 2 then:
 makes legal move from i to f or vice versa
 makes legal move from i to m or vice versa
 makes legal move from m to f or vice versa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-can-we-interpret&quot;&gt;How can we interpret?&lt;/h2&gt;

&lt;p&gt;Given algorithm must be executed iteratively until stack compeletely relocated to final pole. Before using above algorithm, we firstly choose data structure that fit well the situation, the situation only allows movement for last inserted disk (smallest disk) then ‘stack’ data structure is best fit. Tower of Hanoi requires smaller disk placed above larger disk, then add rules in our data structure that only smaller disk can be stacked by another disk. Specification of the data structure methods written below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Usage&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isFull&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Check if stack is full&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;pop&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Remove element (disk) from the stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;push&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Insert element (disk) to the stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;peek&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Return top-most element value of the stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;isSmaller&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Check if element value to be inserted is smaller than top-most element value of stack&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 1: Methods of stack data structure&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;If the data structure has been ready, moved on to solution-focused interpretation, we basically interpret the pseudocode below to the more technical one. Earlier before solution delivered, we must initiate the problem by creating 3 stack places (poles) and create disks as required. Methods to solution delivery are listed below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Usage&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;moveDisk&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Move disk from stack to stack&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;solveProblem&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;interpretation of solution pseudocode&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 2: Methods of solution delivery&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;With the specification and explanation above, implementations of the solution are listed in bonus section.&lt;/p&gt;

&lt;h2 id=&quot;how-the-comparison-going&quot;&gt;How the comparison going?&lt;/h2&gt;

&lt;p&gt;As mentioned above, we are comparing compilation time and execution time. Before gone to comparison, we define the scope of the comparison that the code used same approach and same algorithm, running on same machine (hardware and software) and deliver the solution of same number of disks, code executed don’t requested for user’s input so user can’t distort the results. The results of comparison, provided by ‘time’ command, are presented in table below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Metrices&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;C&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Go&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Compilation time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.263s&lt;br /&gt; user 0m0.089s&lt;br /&gt; sys 0m0.029s&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m1.036s&lt;br /&gt; user 0m0.285s&lt;br /&gt; sys 0m0.124s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Execution time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.054s&lt;br /&gt; user 0m0.052s&lt;br /&gt; sys 0m0.002s&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real 0m0.025s&lt;br /&gt; user 0m0.024s&lt;br /&gt; sys 0m0.002s&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 3: Measurement results&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Times showed on the table 3 consist 3 kind of time, ‘real’, ‘user’ and ‘sys’. ‘Real’ indicates whole time taken on the processes running session, ‘user’ indicates time spent by CPU in computation process of the executable, ‘sys’ indicates time spent by CPU in system tasks in order to bring the executable a run.&lt;/p&gt;

&lt;p&gt;In compilation time, C beats Go in every aspects of time, but in the execution time, Go beats C in ‘real’ and ‘user’ time, Go and C are equal in ‘sys’ time.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The measurement resulted that code in C was faster in terms of compilation time than code in Go, contrary to execution time, Go was faster than C.&lt;/p&gt;

&lt;h2 id=&quot;bonus&quot;&gt;Bonus&lt;/h2&gt;

&lt;p&gt;The implementations are below.&lt;/p&gt;

&lt;p&gt;C: &lt;a href=&quot;https://git.io/J8i4a&quot;&gt;https://git.io/J8i4a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go: &lt;a href=&quot;https://git.io/J8iBt&quot;&gt;https://git.io/J8iBt&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;article-source&quot;&gt;Article Source&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.stemlittleexplorers.com/en/make-and-solve-tower-of-hanoi/&quot;&gt;https://www.stemlittleexplorers.com/en/make-and-solve-tower-of-hanoi/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Tower_of_Hanoi&quot;&gt;https://en.wikipedia.org/wiki/Tower_of_Hanoi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I. Moscovich, 1000 playthinks: puzzles, paradoxes, illusions &amp;amp; games. New York: Workman Pub., 2001.&lt;/li&gt;
  &lt;li&gt;Petković Miodrag, Famous puzzles of great mathematicians. Providence, RI: American Mathematical Society, 2013.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/stack-data-structure-introduction-program/&quot;&gt;https://www.geeksforgeeks.org/stack-data-structure-introduction-program/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/data_structures_algorithms/stack_program_in_c.htm&quot;&gt;https://www.tutorialspoint.com/data_structures_algorithms/stack_program_in_c.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/556405/what-do-real-user-and-sys-mean-in-the-output-of-time1&quot;&gt;https://stackoverflow.com/questions/556405/what-do-real-user-and-sys-mean-in-the-output-of-time1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="article" /><summary type="html">Comparing C and Go Solutions of Tower of Hanoi Problem</summary></entry><entry><title type="html">NEW FORMAT</title><link href="http://0.0.0.0:4000/english/misc/2021/07/06/new-format.html" rel="alternate" type="text/html" title="NEW FORMAT" /><published>2021-07-06T21:12:59+07:00</published><updated>2021-07-06T21:12:59+07:00</updated><id>http://0.0.0.0:4000/english/misc/2021/07/06/new-format</id><content type="html" xml:base="http://0.0.0.0:4000/english/misc/2021/07/06/new-format.html">&lt;h1 id=&quot;new-content-format&quot;&gt;New Content Format&lt;/h1&gt;
&lt;p&gt;I decided to create new format of writing content, until now, there are 2 category of writing format, ‘article’ and ‘misc’. I am going to make a category for paper breakdown writing, the content will be write down in 4 sections that can describe the paper well, the paper breaks into ‘features’, ‘facts’, ‘findings’ and ‘future works’. Feature section describes what did the paper offers in term of research topic, objective and scope. Facts section describes the facts existed by the research documented on the paper goes on. Findings section describes all new things found through the research process. Future Works section describes possible research conduction following the current research’s findings.&lt;/p&gt;

&lt;p&gt;It seems more rigid than usual ‘article’ category format but I believe it is the efficient way to breakdown research papers, and obviously that format can change sometimes by the times fly. The paper breakdown seems to have more chance of more frequent content deliverability, so maybe the update will get longer in the future. (Akhmal R)&lt;/p&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="misc" /><summary type="html">New Content Format I decided to create new format of writing content, until now, there are 2 category of writing format, ‘article’ and ‘misc’. I am going to make a category for paper breakdown writing, the content will be write down in 4 sections that can describe the paper well, the paper breaks into ‘features’, ‘facts’, ‘findings’ and ‘future works’. Feature section describes what did the paper offers in term of research topic, objective and scope. Facts section describes the facts existed by the research documented on the paper goes on. Findings section describes all new things found through the research process. Future Works section describes possible research conduction following the current research’s findings.</summary></entry><entry><title type="html">TELEGRAM BOT: WHAT, WHY AND HOW</title><link href="http://0.0.0.0:4000/english/article/2021/07/02/telegram-bot-what-why-and-how.html" rel="alternate" type="text/html" title="TELEGRAM BOT: WHAT, WHY AND HOW" /><published>2021-07-02T17:12:59+07:00</published><updated>2021-07-02T17:12:59+07:00</updated><id>http://0.0.0.0:4000/english/article/2021/07/02/telegram-bot-what-why-and-how</id><content type="html" xml:base="http://0.0.0.0:4000/english/article/2021/07/02/telegram-bot-what-why-and-how.html">&lt;h1 id=&quot;telegram-bot-understand-reasoned-and-known-how-to&quot;&gt;Telegram Bot: Understand, reasoned and known how to&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;

&lt;p&gt;I in the near past, comes to the new layer of the instant messaging (IM), besides of two (IM) I have known in previous stage of my life named WhatsApp and LINE, the new IM is Telegram. For the record, I used Telegram in academic and learning manners in early stage of usage for example to catch up with lecturer’s matter or sometimes online QnA session with lecturer, more of the time, I find out that technology called bot also available in Telegram with numerous example of bots on the market, then my brain towards the development side and wondering if i can build it by myself, and the answer is yes. Thus the preface ending, this article will show you my thought and steps in learning Telegram Bot and of course learn to build it based on the documentation available.&lt;/p&gt;

&lt;h2 id=&quot;what-is-bot&quot;&gt;What is Bot?&lt;/h2&gt;

&lt;p&gt;Bot is generally a computer program that can execute human actor’s use case scenario, Telegram is an IM application so the human actors on the app do the use case of messaging. The conclusion is the Telegram Bot is a running computer program that can send message to human or fellow bots.&lt;/p&gt;

&lt;h2 id=&quot;bot-and-human-in-telegram-differentiated-right&quot;&gt;Bot and human in Telegram differentiated, right?&lt;/h2&gt;

&lt;p&gt;Telegram as an application differs bots from humans user account, so you cannot be mistaken the bots account as humans account.&lt;/p&gt;

&lt;h2 id=&quot;why-using-bot-is-it-really-essential-or-urgent&quot;&gt;Why using Bot? Is it really essential or urgent?&lt;/h2&gt;

&lt;p&gt;One of reasons of using bot is automating human’s business, that’s how we mean in Telegram too. There’s some human business that human should not mind do it all along, bots do it instead, you can say something tiring like moderate Telegram group, deleting spam message on your group and so on, that’s why bots mean business. With the platform Telegram being free as in freedom, bots can be freely developed too and it opens possibility to unlimited range of bots usage.&lt;/p&gt;

&lt;p&gt;I feel I can make the urgencies up from the essence of bot usage above, user-oriented urgencies. But when it comes to developers urgencies aside of the nature of open source Telegram bore in hand, developers must be gained some new experience of doing something by building and they will get perks of new skill while bot usages are increasing by the year and of course new career opportunity.&lt;/p&gt;

&lt;h2 id=&quot;we-can-learn-something-new-then-how-to-started&quot;&gt;We can learn something new then, how to started?&lt;/h2&gt;

&lt;p&gt;Firstly in this article, I will define the scope of the article so you don’t getting confused as article goes by.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Article use Python as language for bot building&lt;/li&gt;
  &lt;li&gt;Steps in the article take place in Linux environment&lt;/li&gt;
  &lt;li&gt;Using python-telegram-bot to build the bot, install with ‘pip install python-telegram-bot’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After above line, you should know the scope and your expectation here, thus we can start the how, very first of the how is enroll your bot to &lt;a href=&quot;https://telegram.me/botfather&quot;&gt;@BotFather&lt;/a&gt;, get the token and you are ready to build your own bot.&lt;/p&gt;

&lt;h2 id=&quot;is-that-it-we-want-the-actual-howto&quot;&gt;Is that it? We want the actual howto!&lt;/h2&gt;

&lt;p&gt;Okay, so at this point I assume the previous prerequisite is not a problem anymore and we can take actual lesson of the bot, I can put it on numbered list below so you can keep on the line. there is 3 essential entities for the bot and they must form the program so it can work perfectly. The track is like this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Updater&lt;/li&gt;
  &lt;li&gt;Dispatcher&lt;/li&gt;
  &lt;li&gt;Handlers&lt;/li&gt;
  &lt;li&gt;Filters&lt;/li&gt;
  &lt;li&gt;Form the program&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So the point number 1 until 3 is technically a class on the python-telegram-bot library and I can take its role for you starting from the beginning.&lt;/p&gt;

&lt;p&gt;Updater set to be update catcher of the bot activity, the Updater will ring the bell if the bot said get an update or two from the user, for the bell working properly you need a Dispatcher to read the bell ring. Dispatcher is like real-life dispatch imagine you are in public service field of job (cop for example), you will need a dispatch if you need something based on the newest event on the field, cop need back up, sent to dispatch then dispatch communicate the message to back up personnel. As of example, I can say Updater is cop and Dispatcher is a dispatch, Updater ring the bell for help, dispatch translate the bell so wanted help can be accommodated to Updater. Handlers is a class where the Dispatcher communicates in order to fulfill Updater’s requests, Handlers can be called by Dispatcher when the condition met. Handlers will need Filters to sort out the dispatcher call&lt;/p&gt;

&lt;p&gt;At this point, I hope you complete your knowledge about point 1 until 3 above and ready to make the program up. With that knowledge you have, you can utilize 3 entities above starting with Updater.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; You should do this first &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;telegram.ext&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Declare and define your updater first &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;updater&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;telegra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Updater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;YOURTOKEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If written, your updater is ready and do declare the line to the dispatch, Dispatcher can be initialized from Updater class itself by using&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Declare the dispatch &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dispatch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updater&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatcher&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Only if the dispatch declared, you can able to do jobs based on event occurred, you can designed your bot to respond on sent message using handler, there’s many Handlers available but for the entry level how to, this article only use MessageHandler to carry on. Filters user by Handlers to determine the kind of request sent from dispatch so the Handlers can respond correctly&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; import handler from the library &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;telegram.ext&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MessageHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Filters&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; make up the handler to respond sent message filtered as text &quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; previously you must define the function called 'yes' like this&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reply_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Your reaching of this line means you are ready to get more exploration on the bot development, for the reference you can use your own bot using above explanation, for example &lt;a href=&quot;https://www.codementor.io/@karandeepbatra/part-1-how-to-create-a-telegram-bot-in-python-in-under-10-minutes-19yfdv4wrq&quot;&gt;echobot&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;closure&quot;&gt;Closure&lt;/h2&gt;

&lt;p&gt;I think the knowledge of bot building can be very useful, professionally or casually in remembrance of automation usefulness. With the openness of Telegram, build the Telegram bot can be nice starting point for your bot building journey in the same platform or the others, and I think you might going so with the essential this article provided. You reach the end of the word, thank you.&lt;/p&gt;

&lt;p&gt;Special Note: Oh my god, three weeks without an update, this week finally it airs. More articles to come, i assure you. (Akhmal R.)&lt;/p&gt;

&lt;h2 id=&quot;article-source&quot;&gt;Article Source&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.morningbrew.com/emerging-tech/stories/2020/09/16/survey-chatbot-usage-increased-925-2019-2020&quot;&gt;https://www.morningbrew.com/emerging-tech/stories/2020/09/16/survey-chatbot-usage-increased-925-2019-2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://python-telegram-bot.readthedocs.io/en/stable/&quot;&gt;https://python-telegram-bot.readthedocs.io/en/stable/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/python-telegram-bot/python-telegram-bot/wiki/Extensions-%E2%80%93-Your-first-Bot&quot;&gt;https://github.com/python-telegram-bot/python-telegram-bot/wiki/Extensions-%E2%80%93-Your-first-Bot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codementor.io/@karandeepbatra/part-1-how-to-create-a-telegram-bot-in-python-in-under-10-minutes-19yfdv4wrq&quot;&gt;https://www.codementor.io/@karandeepbatra/part-1-how-to-create-a-telegram-bot-in-python-in-under-10-minutes-19yfdv4wrq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="article" /><summary type="html">Telegram Bot: Understand, reasoned and known how to</summary></entry><entry><title type="html">REACT NATIVE WITHOUT ANDROID STUDIO</title><link href="http://0.0.0.0:4000/english/article/2021/06/04/setting-up-react-native-environment-without-android-studio.html" rel="alternate" type="text/html" title="REACT NATIVE WITHOUT ANDROID STUDIO" /><published>2021-06-04T21:12:59+07:00</published><updated>2021-06-04T21:12:59+07:00</updated><id>http://0.0.0.0:4000/english/article/2021/06/04/setting-up-react-native-environment-without-android-studio</id><content type="html" xml:base="http://0.0.0.0:4000/english/article/2021/06/04/setting-up-react-native-environment-without-android-studio.html">&lt;h1 id=&quot;setting-up-react-native-development-environment-without-android-studio&quot;&gt;Setting up React Native Development Environment without Android Studio&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;

&lt;p&gt;Some of Mobile Developer (I don’t know about iOS since they have particular hardware and software bundled for development) especially Android often had a tantrum about their machine being unnecessarily slow with the presence of Android Studio, well admitted I am too the one of them. With the rant comes the idea to make the life easier without that slow IDE, at the first sight, its hard to be possible but if you looking closely to the documentation, its not that hard. In this article, I am going to make an environment that can generate Android Apps with only the essential tools of Android Development.&lt;/p&gt;

&lt;h2 id=&quot;so-we-are-going-to-install-something-right&quot;&gt;So, we are going to install something right?&lt;/h2&gt;

&lt;p&gt;Yes, the setting up activities are basically the installation matters for required tools and some adjustment for the tools installed before in strive for proper functionality of the tools. So we first define the tools required for the development environment setups. According to the React Native Docs, this list are required for the setups and to be noted that we will use the React Native CLI Quickstart. According to the list, I will explain list members at a glance before we continue.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Node&lt;/li&gt;
  &lt;li&gt;Java Development Kit&lt;/li&gt;
  &lt;li&gt;Android Development Environment&lt;/li&gt;
  &lt;li&gt;Watchman&lt;/li&gt;
  &lt;li&gt;React Native CLI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node is the runtime environment of the JavaScript development, all of React Native development things runs on Node environment and the JavaScript version of Java Development Kit (JDK). JDK itself is not runtime environment, it is the compiler used to compile Java code into executable form, we don’t need Runtime Environment (JRE) yet since the scope of this article are to develop, not run the Java exec. Android Development Environment (ADE) of course must be installed in case we want to develop Android Apps, ADE is bundled with Android Studio so if you install Android Studio, you are automatically installing ADE, but in this case, we will skip Android Studio for a while and focused to main component of the ADE, the Android SDK. Watchman is file changes watching tools, yeah you might say like Git but little bit modern from Facebook. React Native CLI take part of the development as the main controller of the runtime.&lt;/p&gt;

&lt;h2 id=&quot;how-do-we-install-it-anyway&quot;&gt;How do we install it, anyway?&lt;/h2&gt;

&lt;p&gt;The ‘how’ thing may vary depends on your OS, but i will show you the steps for Fedora. The installation pipeline must be defined in the beginning of this section in fact that the writing of the list in front of the explanation is far more understandable than not.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install JDK and NodeJS.&lt;/li&gt;
  &lt;li&gt;Download sdkmanager.&lt;/li&gt;
  &lt;li&gt;Add path and aliases on ‘.bashrc’.&lt;/li&gt;
  &lt;li&gt;Install SDK component.&lt;/li&gt;
  &lt;li&gt;Create Android project directory.&lt;/li&gt;
  &lt;li&gt;Install required packages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before we continue, the sequence above are not an absolute sequence, you can do step 1, 2 and three concurrently depend on your hardware and internet spec, but step 4 until 6 are meant to be done sequentially. Hence the installation sequence written, let me advance to the ‘how’.&lt;/p&gt;

&lt;p&gt;You can start with installing JDK first, then Node or else sequentially done then in one installation command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dnf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;java-latest-openjdk-devel.x86_64 nodejs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To be noted that nodejs version in the repo is stable version, you can get current version by execute these command first.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dnf &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; gcc-c++ make
curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; https://rpm.nodesource.com/setup_16.x | &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; bash -&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another way to install your Node is if you have any version of Python 3 (version 3 recommended) and virtualenv module installed on your Python, you can create a virtualenv and then create Node virtualenv by executing these commands.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# activate your virtualenv&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /path/to/virtualenv/bin/activate
&lt;span class=&quot;c&quot;&gt;# you can install nodeenv by execute&lt;/span&gt;
python &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nodeenv
&lt;span class=&quot;c&quot;&gt;# create your nodeenv by&lt;/span&gt;
nodeenv &amp;lt;nodeenv-foldername&amp;gt;
&lt;span class=&quot;c&quot;&gt;## add option if you wish to install the specified version&lt;/span&gt;
nodeenv &amp;lt;nodeenv-foldername&amp;gt; &lt;span class=&quot;nt&quot;&gt;--node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NODE_VER
&lt;span class=&quot;c&quot;&gt;### or&lt;/span&gt;
nodeenv &amp;lt;nodeenv-foldername&amp;gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; NODE_VER
&lt;span class=&quot;c&quot;&gt;# deactivate your virtualenv&lt;/span&gt;
deactivate
&lt;span class=&quot;c&quot;&gt;# and activate your nodeenv&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /path/to/nodeenv/bin/activate&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While you can create node virtual environment, you can choose which version of node you want to install by adding ‘-n NODE_VER’ or ‘–node=NODE_VER’ option when you create your nodeenv.&lt;/p&gt;

&lt;p&gt;While it takes some times, you can light up your I/O with downloading Android SDK by browsing to the Android Studio download site, go to ‘Command line tools only’ and download one based on your OS, choose Linux for this occasion, and then let them to be completed or you can add aliases on your ‘.bashrc’ if you use bash shell (I am using bash shell in this article).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# add onto very bottom line of .bashrc&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ANDROID_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/Android/Sdk
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ANDROID_SDK_ROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/Android/Sdk
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/cmdline-tools/latest
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/platform-tools

&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sdkmanager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/cmdline-tools/latest/bin/sdkmanager
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;adb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ANDROID_HOME&lt;/span&gt;/platform-tools/adb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After Android SDK successfully downloaded, you can take the folder to your home directory to get aligned with your ‘.bashrc’ or adjust your ‘.bashrc’ based on your current Android SDK folder location. Downloaded .zip can be stored in ‘$HOME/Android/Sdk’ and make new directory on ‘cmdline-tools’ (folder you just unzipped) name it ‘latest’ and move the rest of ‘cmdline-tools’ occupants to ‘latest’ folder, said instructions ran in case of you want to aligned your SDK tools with your ‘.bashrc’. If the SDK were clearly installed, you can execute this command to install its component.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# installing the platform tools required for development (ADB...etc)&lt;/span&gt;
sdkmanager &lt;span class=&quot;s2&quot;&gt;&quot;platform-tools&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;platforms;android-28&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# installing the build tools to build React Native to Android App&lt;/span&gt;
sdkmanager &lt;span class=&quot;s2&quot;&gt;&quot;build-tools;31.0.0-rc4&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;SDK now ready to be used, so we first ensure the node are installed by checking ‘node’ command&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;node &lt;span class=&quot;nt&quot;&gt;--v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;if the version appears, you can advance to next sequence else you must reinstall you NodeJS using method said above. You can create the React Native project by executing&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npx react-native init yourprojectName&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you have to wait until the process finished, after the process completion, you can install node packages required by your project, since this project are starting point of the React Native Apps, the required packages may vary depend on what app do you wish to develop.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you need to know the required packages your project had to satisfy, you can open your project’s ‘package.json’. In this point, the sequence was all done then the environment setup is finished, so you can develop your own project with them tools.&lt;/p&gt;

&lt;h2 id=&quot;you-install-all-of-the-required-tools-i-dont-see-watchman-in-action-though&quot;&gt;You install all of the required tools? I don’t see watchman in action, though.&lt;/h2&gt;

&lt;p&gt;Watchman is automatically installed on the creation of your project’s folder (step 5 of the installation sequence) so you don’t bother downloading it and place it to your folder over again.&lt;/p&gt;

&lt;h2 id=&quot;bonus-run-your-android-app-in-your-device&quot;&gt;Bonus: Run your Android App in your device&lt;/h2&gt;

&lt;p&gt;Decided to make some additional references of how to run your Android App in your physical Android Device, since it was pretty simple to do. First, ensure the previous required Node packages are provided, if not, you can try installing them again by.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If all packages are provided, then you can run the engine called ‘Metro’ that act as JavaScript bundler by execute this command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npx react-native start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Open another terminal, run this command&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npx react-native run-android&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before the command mentioned above, you have to ensure your device is connected properly to the ADB by identifying your device, the id can be obtained by executing&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;lsusb
&lt;span class=&quot;c&quot;&gt;# the output must be list of devices connected through BUS interface&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Identify your device by executing it when device unplugged and when device plugged to your USB port and see the ‘lsusb’ output differences, take as an example this device.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# difference between two outputs of 'lsusb'&lt;/span&gt;
Bus 001 Device 003: ID 22b8:2e76 Motorola PCS&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hence the example, take the ID as ‘22b8’, then you must add udev rule by executing above command, remember to replace the ID with your own.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SUBSYSTEM==&quot;usb&quot;, ATTR{idVendor}==&quot;22b8&quot;, MODE=&quot;0666&quot;, GROUP=&quot;plugdev&quot;'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/udev/rules.d/51-android-usb.rules&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then you can check the Android Device connected to your computer, to be remembered that your Android device must be in USB debugging mode to be able to do this task so enable it before you can find it on adb by&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;adb devices&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If available, then you can run this command once again to run debugger mode on your device&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npx react-native run-android&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Wait until the App shows up on your Android screen and it is the debugger mode of your app. The End.&lt;/p&gt;

&lt;h2 id=&quot;article-source&quot;&gt;Article Source&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://reactnative.dev/docs/environment-setup&quot;&gt;https://reactnative.dev/docs/environment-setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio&quot;&gt;https://developer.android.com/studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fedoraproject.org/en-US/quick-docs/installing-java/&quot;&gt;https://docs.fedoraproject.org/en-US/quick-docs/installing-java/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pypi.org/project/nodeenv/&quot;&gt;https://pypi.org/project/nodeenv/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="article" /><summary type="html">Setting up React Native Development Environment without Android Studio</summary></entry><entry><title type="html">RESTFUL API PERFORMANCE COMPARISON</title><link href="http://0.0.0.0:4000/english/article/2021/05/27/comparing-performances-of-fp-and-oop-restful-api.html" rel="alternate" type="text/html" title="RESTFUL API PERFORMANCE COMPARISON" /><published>2021-05-27T21:12:59+07:00</published><updated>2021-05-27T21:12:59+07:00</updated><id>http://0.0.0.0:4000/english/article/2021/05/27/comparing-performances-of-fp-and-oop-restful-api</id><content type="html" xml:base="http://0.0.0.0:4000/english/article/2021/05/27/comparing-performances-of-fp-and-oop-restful-api.html">&lt;h1 id=&quot;comparing-performance-of-functional-and-object-oriented-programming-restful-api&quot;&gt;Comparing performance of Functional and Object-Oriented Programming RESTFUL API&lt;/h1&gt;

&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;

&lt;p&gt;So this is basically my final essay required for my bachelor’s degree of computer science, I just wrote it down the line to this article in fact of any topic did not really pop out onto my mind right now, maybe tomorrow it will. In this article, I will compare two RESTFUL API I made each using Functional and Object-Oriented (OO) Programming paradigms, the value compared is performance per request sent until responded, that can be broken down to be metrics of execution time, memory used and throughput of the requests.&lt;/p&gt;

&lt;h2 id=&quot;restful-api-introduce-me-to-them&quot;&gt;RESTFUL API? introduce me to them!&lt;/h2&gt;

&lt;p&gt;As I said before, I made 2 RESTFUL API then compare it, API at a glance is the web service that act like the bridge between two or more isolated resource and RESTFUL API is an API that obey REST constraint. You can read about REST constraint yourself [here][fielding-rest][fielding-rest]:[https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm].&lt;/p&gt;

&lt;h2 id=&quot;ok-i-got-it-what-about-them-paradigms&quot;&gt;OK I got it, what about them paradigms?&lt;/h2&gt;

&lt;p&gt;Yeah two paradigms I am going to compare are Functional and OO paradigm, these two of course can be identified by its unique attributes of paradigm. API built using Functional paradigm consists of several small functions, the execution of this API is basically the chain of function call. API built using OO paradigm consists of several programmatically-defined objects, the execution of this API is basically declared objects worked together as a team.&lt;/p&gt;

&lt;h2 id=&quot;before-we-go-further-is-paradigm-difference-really-matter-for-them-performance&quot;&gt;Before we go further, is paradigm difference really matter for them performance?&lt;/h2&gt;

&lt;p&gt;I heard that question before ever started writing the essay, there’s some journal refer the paradigm to be a real deal for the performance but I will show you one of them in here, the rest of the pack written on footnote. Cited from essay authored by Kim Svensson Sand and Tord Eliasson, the essay conducted similar performance comparison of program written in Functional and OO manner, then on near future they found out that OO have better performance than Functional one and for some development metrics like development time and length of code, Functional code required less time and less code than OO.&lt;/p&gt;

&lt;h2 id=&quot;what-method-did-you-use-to-conduct-such-comparison&quot;&gt;What method did you use to conduct such comparison?&lt;/h2&gt;

&lt;p&gt;The method used was honestly similar to Kim and Tord’s method, I developed the API with Create, Read, Update and Delete (CRUD) capabilities, design the simple database table, put the HTTP requests on the table and match to CRUD program principle, test the program to ensure its correctness, collect the data and analyze to extract the conclusion.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Design DB table.&lt;/li&gt;
  &lt;li&gt;Put the HTTP requests to matched CRUD principle.&lt;/li&gt;
  &lt;li&gt;Developed the API.&lt;/li&gt;
  &lt;li&gt;Unit-test the API.&lt;/li&gt;
  &lt;li&gt;Collect and analyze data.&lt;/li&gt;
  &lt;li&gt;Extract the conclusion.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the beginning, we first defined what we going to develop, database structure are the crucial one. Database used is a simple one with just one table with 5 table attributes, the motive is database defined could be enough of a playing ground for the comparison. Some predevelopment thing we had to do are define the CRUD functionality and put the HTTP requests on its side, its important to do it in fact some CRUD functionality can be performed by specified HTTP requests.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Kriminal&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Id:int&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Nama:string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Umur:unsign&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TIndak:string&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Status:string&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 1: A table from database&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Since the two previous steps fulfilled, the API development it is, in this step we basically develop two API using each two drill. Meanwhile the HTTP requests used were 6 of POST, GET, PUT, DELETE, HEAD and PATCH for 10 kind of CRUD functionality that can be viewed in table 2.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;CRUD Function&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;HTTP Requests&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Get first 5 row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GET&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Add a new row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;POST&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edit ‘status’ column on a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PUT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Delete a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DELETE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Get a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GET&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edit ‘status’ column on a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PATCH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Get a row’s meta data&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;HEAD&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edit ‘tindak’ column on a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PUT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edit ‘tindak’ column on a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;POST&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Edit ‘tindak’ column on a row&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PATCH&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 2: CRUD function and matched HTTP requests&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;After the above table completed, we then prepared the development environment and start to write some code. Two APIs written in the guide of two paradigm said above, Functional and OO , but in case you don’t get the main point, here I expresses two of them in comparison table 3.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Object-oriented&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Functional&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Encapsulate its data with ‘class declaration’&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Encapsulate its data with ‘data immutability’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Class, object and member have access to data&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Data are in open-access to any function but editing privilege&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Class encapsulates function&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Function are declared globally&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No side effect restriction&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Have side effect restriction&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 3: Functional and object-oriented main difference&lt;/sub&gt;&lt;/p&gt;

&lt;h2 id=&quot;hows-the-result&quot;&gt;How’s the result?&lt;/h2&gt;

&lt;p&gt;I will jump to step 5 of the list and assume previous steps done perfectly under the bridge. For the note before we go further ahead, the entire process of the comparison took place in one local computer, so no internet connection or local area connection involved.&lt;/p&gt;

&lt;p&gt;Data collection separated into 3 scenario of request sending, with one user, hundred users and five hundreds users, the users are controlled by load testing machine. The result of data collection for performance metric of execution time (microseconds) expressed in table 4 below and to ensure the comparison are good to analyze, Mann-Whitney value are generated as well to find out if the performance differences are such significant.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Functional (mean)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Object-oriented (mean)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Mann-Whitney (p-value)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;248.1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;251.4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.41&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;230.7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;226.6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.44&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;141.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;138.2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.248&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sub&gt;Table 4: Data collection result&lt;/sub&gt;&lt;/p&gt;

&lt;h2 id=&quot;data-were-collected-so-the-conclusion&quot;&gt;Data were collected, so the conclusion?&lt;/h2&gt;

&lt;p&gt;We can see some insight from the comparison, that the comparison indeed have resulted such different value of performance metric every scenarios then the question is ‘are the differences exist significant?’. The answer of said question is all explained by Mann-Whitney p-value, two values are in null hypothesis range until p-value are below 0.05, knowing that null hypothesis means they have insignificant difference in-between. Looking for the result, APIs I made had no significant difference.&lt;/p&gt;

&lt;h2 id=&quot;closure&quot;&gt;Closure&lt;/h2&gt;

&lt;p&gt;The result was concluded and its honestly had difference each, but not such significant. For responses of this article’s airing, this is by-far my first english article and I honestly looking forward to write more especially in the performance comparison land. Good bye for now (Akhmal R).&lt;/p&gt;

&lt;h2 id=&quot;footnote&quot;&gt;Footnote&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;K. S. Sand and T. Eliasson, “A Comparison of Functional and Object-Oriented Programming Paradigms in JavaScript” 2017&lt;/li&gt;
  &lt;li&gt;A. Rizkyanto, “Comparative Study of Functional and Object-oriented Programming Paradigms for RESTFUL API with JavaScript” 2021&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Akhmal R</name></author><category term="english" /><category term="article" /><summary type="html">Comparing performance of Functional and Object-Oriented Programming RESTFUL API</summary></entry><entry><title type="html">TENTANG BLOG INI</title><link href="http://0.0.0.0:4000/indonesian/misc/2021/05/20/tentang-blog-ini.html" rel="alternate" type="text/html" title="TENTANG BLOG INI" /><published>2021-05-20T21:12:59+07:00</published><updated>2021-05-20T21:12:59+07:00</updated><id>http://0.0.0.0:4000/indonesian/misc/2021/05/20/tentang-blog-ini</id><content type="html" xml:base="http://0.0.0.0:4000/indonesian/misc/2021/05/20/tentang-blog-ini.html">&lt;h1 id=&quot;cerita-tentang-blog-ini&quot;&gt;Cerita Tentang Blog Ini&lt;/h1&gt;

&lt;h2 id=&quot;prakata&quot;&gt;Prakata&lt;/h2&gt;

&lt;p&gt;Ini bukan artikel ya, bakal gua tambahin ke seksi ‘about’ juga nanti, postingan blog ini didedikasikan untuk menuangkan cerita dibalik ada dan tiadanya blog ini. Latar belakang, tujuan dan motivasi blog ini didirikan akan gua tuangkan di bawah.&lt;/p&gt;

&lt;h2 id=&quot;ngapain-sih-bikin-blog&quot;&gt;Ngapain sih bikin blog?&lt;/h2&gt;

&lt;p&gt;Awalnya sih bikin blog ini untuk memenuhi tugas kuliah, waktu itu gua ambil suatu matkul dan singkat cerita udah akhir semester disuruh bikin tugas akhir berupa tulisan di blog/situs berbagi tulisan, karena situs berbagi tulisan itu banyak opsinya (sebut aja medium, blog kompasiana, forum online dsb.) maka gua pilih opsi yang paling susah, yaitu GitHub Pages (sebut saja GP) (soksokan edgy ceritanya wkwk), bukan sok edgy, tapi pilihan gua ini cukup beralasan menurut gua.&lt;/p&gt;

&lt;h2 id=&quot;alasannya-apa-selain-untuk-dibilang-edgy&quot;&gt;Alasannya apa? selain untuk dibilang edgy?&lt;/h2&gt;

&lt;p&gt;Kalau pembaca yang betul-betul baca tulisan gua dari awal pasti ngerti kenapa gua pilih ini, tapi anggap aja pembaca tulisan ini gak ngerti. Gua pilih GP ini sebenernya untuk nilai kebebasannya yang merupakan kelebihan GP dibanding platform lain, iya kan bebas, blog gua yang nulis sendiri, yang generate juga gua sendiri, siapa yang mau ngatur? disini gua bisa bebas nulis tanpa gangguan moderator forum atau webmaster yang bisa suatu saat takedown tulisan lu jika dirasa tidak perlu (misalnya, topik tulisan lu redundan/udah ada yang bahas), ya bebas sih tapi gua disini juga bakal junjung tinggi etika. Dengan alasan kebebasan itu, tersimpan misi narsisis gua sebagai pemilik blog, personal branding? bisa, arsip proyekan? bisa, dokumentasi? bisa, catatan online? bisa juga (lebih tepatnya egoistis).&lt;/p&gt;

&lt;h2 id=&quot;kenapa-masih-nulis-tugas-kuliah-bukannya-udah-selesai&quot;&gt;Kenapa masih nulis? tugas kuliah bukannya udah selesai?&lt;/h2&gt;

&lt;p&gt;Alasan yang sama seperti diatas, karena blog ini sebetulnya mau dimuat tulisan apapun bisa, asal dengan persetujuan gua sebagai pemiliknya, maka sesudah dipakai untuk memenuhi tugas kuliah, gua sekarang blogging ini juga sebetulnya buat self-reminder, karena bidang yang gua pelajari, ilmu-ilmu yang gua dapat gak akan muat kalau hanya ditampung di kepala gua, makanya gua tulis disini sebagai pengingat juga sebagai sumber ilmu bagi yang membutuhkan, gimana? cukup ‘sambil menyelam minum air’ kan? Satu alasan lagi sih untuk pertanyaan ini, mengisi kegabutan selama jadi pengangguran.&lt;/p&gt;

&lt;h2 id=&quot;ada-dan-tiada-oiya-kenapa-waktu-itu-sempat-berhenti&quot;&gt;Ada dan tiada? oiya kenapa waktu itu sempat berhenti?&lt;/h2&gt;

&lt;p&gt;Alasan yang sebenernya gak masuk akal ya buat pertanyaan ini, skripsi. Skripsi ini bagi gua masa-masa yang lumayan menekan sih makanya emang fokus gua waktu itu ya untuk kelarin skripsi sebelum basi. Oke end of line buat pertanyaan ini (udah dibahas di misc sebelum ini juga).&lt;/p&gt;

&lt;h2 id=&quot;penutup&quot;&gt;Penutup&lt;/h2&gt;

&lt;p&gt;Sekian beberapa paragraf tentang blog ini, tapi sebelum habis tulisan ini gua sebenarnya mau berterimakasih kepada dosen gua waktu itu yang jadi enabler kegiatan blogging gua ini (Bu Ariana, special regards) kalau bukan karena ibu, saya mungkin cuma main game atau bikin CV selama menganggur ini. Salam (Akhmal R).&lt;/p&gt;</content><author><name>Akhmal R</name></author><category term="indonesian" /><category term="misc" /><summary type="html">Cerita Tentang Blog Ini</summary></entry><entry><title type="html">TIMED BACKGROUND</title><link href="http://0.0.0.0:4000/indonesian/article/2021/05/18/timed-background.html" rel="alternate" type="text/html" title="TIMED BACKGROUND" /><published>2021-05-18T11:12:59+07:00</published><updated>2021-05-18T11:12:59+07:00</updated><id>http://0.0.0.0:4000/indonesian/article/2021/05/18/timed-background</id><content type="html" xml:base="http://0.0.0.0:4000/indonesian/article/2021/05/18/timed-background.html">&lt;h1 id=&quot;membuat-wallpaper-yang-mengikuti-pergerakan-matahari&quot;&gt;Membuat Wallpaper yang mengikuti pergerakan matahari&lt;/h1&gt;

&lt;h2 id=&quot;prakata&quot;&gt;Prakata&lt;/h2&gt;

&lt;p&gt;Pernah kepikiran kalau wallpaper kita bisa berubah sendiri? Saya yakin pasti pernah, tapi pernah kepikiran matahari wallpaper kita bisa bergerak sendiri? Harusnya pernah kalau anda pake si M dari toko A. Tapi jika kita males beli produk dari toko A tersebut apakah matahari di wallpaper kita bisa bergerak sendiri? Bisa lah! Lanjutan dari artikel ini akan membahas (semoga bisa dimengerti) cara supaya matahari di laptop/PC anda bisa gerak sendiri.&lt;/p&gt;

&lt;h2 id=&quot;beneran-bisa-emang-ada-fitur-seperti-itu&quot;&gt;Beneran bisa? Emang ada fitur seperti itu?&lt;/h2&gt;

&lt;p&gt;Iya sejujurnya setau saya tidak ada fitur bawaan seperti itu di laptop/PC selain dari toko A, di Windows setau saya tidak ada (kalaupun ada, tidak dibahas disini) tapi di OS Linux, bisa dibikin timed background itu dan kita akan bahas.&lt;/p&gt;

&lt;h2 id=&quot;timed-background-apa-itu&quot;&gt;Timed Background? Apa itu?&lt;/h2&gt;

&lt;p&gt;Timed background (istilah bikinan saya sih ini ckck) itu istilah yang merujuk pada suatu file yang dipakai untuk background desktop yang berubah mengikuti waktu setempat, sejauh ini sejalan kan dengan judul yang mau matahari di laptop/PC kita gerak sendiri. Timed background terdiri dari beberapa gambar yang bergantian mengisi wallpaper anda sesuai waktu di tempat anda.&lt;/p&gt;

&lt;h2 id=&quot;gak-bahas-windows-berarti-cuma-untuk-linux&quot;&gt;Gak bahas Windows? Berarti cuma untuk Linux?&lt;/h2&gt;

&lt;p&gt;Iya artikel ini ditujukan untuk pengguna Linux dengan Desktop Environment (DE) GNOME. Untuk DE lainnya saya belum pernah coba tetapi jika DE yang sedikit-banyak memakai komponen GNOME untuk struktur DE mereka (seperti Budgie atau Cinnamon) kemungkinan sih bisa.&lt;/p&gt;

&lt;h2 id=&quot;untuk-linux-apa-ya&quot;&gt;Untuk Linux apa ya?&lt;/h2&gt;

&lt;p&gt;Saya bilang semua Linux dengan DE GNOME bisa dengan cara ini karena ini fitur dari GNOME, tapi saya akan praktikan dengan Fedora.&lt;/p&gt;

&lt;h2 id=&quot;yaudah-kasih-tau-caranya&quot;&gt;Yaudah kasih tau caranya!&lt;/h2&gt;

&lt;p&gt;Iya yaudah langsung dikasih caranya, biar gak pusing, kita bikin daftar cara-caranya dulu ya.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Boot ke Linux pada komputer anda dan pastikan DE yang dipakai adalah GNOME (Budgie/Cinnamon kemungkinan bisa, tapi artikel ini hanya berfokus pada GNOME).&lt;/li&gt;
  &lt;li&gt;Cari foto/video yang menunjukkan pergerakan matahari pada suatu tempat (keyword hint: sky timelapse) lalu download.&lt;/li&gt;
  &lt;li&gt;Pilih 4 gambar yang menunjukkan waktu fajar, siang, senja dan malam dari foto/video yang di-download.&lt;/li&gt;
  &lt;li&gt;Beri sufiks pada 4 gambar sesuai waktu yang ditunjukkan gambar dan buat timed background.&lt;/li&gt;
  &lt;li&gt;Buat direktori untuk menampung gambar-gambar dan timed background yang sudah dibuat.&lt;/li&gt;
  &lt;li&gt;Aplikasikan timed background.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Seperti biasa, cek dulu kelengkapan prasyarat untuk praktik. Ceklisnya sebenarnya cuma OS Linux dengan DE GNOME yang sudah terinstall, kalau belum, silakan install terlebih dulu. Jika OS yang disebut sudah terinstall, cari video dengan gambar pemandangan langit dengan mataharinya (sky timelapse) yang menunjukkan sedang terbit, siang dan tenggelam, bisa juga kumpulan foto yang memenuhi syarat tersebut (misalnya gambar Mojave).&lt;/p&gt;

&lt;p&gt;Setelah mendapat foto/video yang dimaksud, pilih gambar-gambar (jika anda dapat video, potong video menjadi 4 gambar) yang menunjukkan waktu fajar, tengah hari, senja dan malam hari lalu beri sufiks keempat waktu tersebut pada gambar yang sesuai -dawn untuk gambar fajar, -day untuk gambar tengah hari, -dusk untuk gambar senja dan -night untuk gambar malam hari, nama gambar disarankan menggunakan nama file timed background (misalnya timed background bernama “Bristol.xml”) ditambah sufiks yang sesuai (misalkan gambar senja, disarankan bernama “Bristol-dusk.jpg”). Jika anda mendapat 4 gambar dengan sufiks yang telah disebut, maka kita bisa membuat timed background yang telah disebutkan di awal artikel dengan membuat file .xml dan salin kode di bawah.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;background&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;starttime&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;year&amp;gt;&lt;/span&gt;2020&lt;span class=&quot;nt&quot;&gt;&amp;lt;/year&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;month&amp;gt;&lt;/span&gt;10&lt;span class=&quot;nt&quot;&gt;&amp;lt;/month&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;day&amp;gt;&lt;/span&gt;20&lt;span class=&quot;nt&quot;&gt;&amp;lt;/day&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;hour&amp;gt;&lt;/span&gt;07&lt;span class=&quot;nt&quot;&gt;&amp;lt;/hour&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;minute&amp;gt;&lt;/span&gt;00&lt;span class=&quot;nt&quot;&gt;&amp;lt;/minute&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;second&amp;gt;&lt;/span&gt;00&lt;span class=&quot;nt&quot;&gt;&amp;lt;/second&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/starttime&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- This animation will start at 7 AM. --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- We start with dawn at 7 AM. It will remain up for 2 hours. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;static&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;7200.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-dawn.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/static&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Dawn ended and starts to transition to day at 9 AM. The transition lasts for 2 hours, ending at 11 AM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;transition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;overlay&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;7200.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;from&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-dawn.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-day.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/transition&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- It's 11 AM, we're showing the day image in full force now, for 4 hours ending at 3 PM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;static&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;14400.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-day.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/static&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- It's 3 PM, and we're starting to transition to dusk. Transition completes at 7 PM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;transition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;overlay&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;14400.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;from&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-day.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-dusk.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/transition&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- It's 7 PM, we're showing the dusk for 2 hours ending at 9 PM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;static&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;7200.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-dusk.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/static&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- It's 9 PM, and we're starting to transition to night. Transition completes at 11 PM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;transition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;overlay&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;7200.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;from&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-dusk.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-night.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/transition&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- It's 11 PM, we're showing the night till 5 AM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;static&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;21600.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-night.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/static&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- It's 5 AM, and we're starting to transition to dawn. Transition completes at 7 AM. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;transition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;overlay&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;7200.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;from&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-night.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;to&amp;gt;&lt;/span&gt;/home/akhmalr/timedBackground/Bristol-dawn.jpg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/transition&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/background&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kode diatas berguna untuk mengganti wallpaper secara berkala berdasarkan waktu perkiraan 4 waktu tersebut mulai dan berakhir, kode tersebut dapat diubah tergantung kebutuhan tertentu anda (misalkan, path menuju gambar atau durasi penggantian dapat diubah sesuai keinginan).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/direktori-timed-background.png&quot; alt=&quot;directory&quot; /&gt;
&lt;sub&gt;Gambar 1: file-file dalam direktori timed background&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Setelah 5 file tersebut siap, buat direktori dan masukkan 5 file tersebut ke direktori yang telah dibuat agar tidak tercecer di root/home directory anda. Sekian adalah pembuatan timed background, sampai saat ini, timed background sudah bisa diaplikasikan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/akhmal22/akhmal22.github.io/master/images/tweaks.png&quot; alt=&quot;directory&quot; /&gt;
&lt;sub&gt;Gambar 2: aplikasikan timed background dengan GNOME Tweaks&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Pengaplikasian timed background dapat dilakukan dengan GNOME Tweaks, oleh karena itu jika anda belum menginstall (GNOME Tweaks bukan aplikasi bawaan) anda harus menginstall GNOME Tweaks terlebih dulu, jika sudah, anda dapat langsung mengaplikasikan timed background dengan beralih ke seksi Appearance lalu pada file selector image, pilih file .xml yang telah dibuat sebelumnya dan selesai, timed background sudah teraplikasikan pada laptop/PC anda.&lt;/p&gt;

&lt;p&gt;Sampai disini dulu artikel pertama saya di tahun 2021 semoga bukan menjadi satu-satunya di tahun ini, akhir kata, Salam (Akhmal R)&lt;/p&gt;</content><author><name>Akhmal R</name></author><category term="indonesian" /><category term="article" /><summary type="html">Membuat Wallpaper yang mengikuti pergerakan matahari</summary></entry></feed>